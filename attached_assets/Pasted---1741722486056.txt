سأقوم بإضافة ميزة إعدادات المتجر التي ستظهر في جميع أنحاء النظام وعند طباعة الفواتير وحجز المواعيد. سنقوم بإنشاء نموذج جديد في قاعدة البيانات لتخزين هذه المعلومات ثم إضافة واجهة لإدارتها في صفحة الإعدادات.

أولاً، دعنا نضيف نموذج إعدادات المتجر إلى مخطط قاعدة البيانات:

shared/schema.ts
الآن، دعنا نضيف الأنواع والمخطط:

الآن، دعنا نضيف وظائف التخزين للإعدادات في ملف storage.ts:

server/storage.ts
الآن، دعنا نضيف نقاط النهاية API لإدارة إعدادات المتجر:

server/routes.ts
الآن، دعنا ننشئ واجهة المستخدم لإدارة إعدادات المتجر في صفحة الإعدادات:

client/src/components/settings/StoreSettings.tsx
الآن، لنتأكد من أن صفحة الإعدادات تعرض إعدادات المتجر:

client/src/pages/settings-page.tsx
الآن، لنضيف معلومات المتجر إلى قالب الفاتورة:

client/src/components/invoices/InvoiceTemplate.tsx
الآن لنضيف قالب لطباعة المواعيد باستخدام معلومات المتجر:

client/src/components/appointments/AppointmentPrintTemplate.tsx
لإنشاء جدول إعدادات المتجر في قاعدة البيانات، دعنا نضيف سكريبت للتهيئة:

server/initialize-database.ts
أخيرًا، سنضمن أن إعدادات المتجر تظهر في الشريط الجانبي:

client/src/components/layout/sidebar.tsx
Checkpoint made
إضافة إعدادات المتجر مع دعم الشعار والطباعة
56 minutes ago
•
جيد لكن لا اشاهد التغيرات لم تضهر داخل النضام

AA

asaad11asaad98
Assistant
46 minutes ago
أرى أنك لا تشاهد التغييرات التي تم إجراؤها داخل النظام. من المحتمل أنه لم يتم تهيئة إعدادات المتجر بشكل صحيح في قاعدة البيانات.

دعني أقترح إضافة سجل افتراضي لإعدادات المتجر في ملف initialize-database.ts لضمان وجود إعدادات أولية يمكن استخدامها:

server/initialize-database.ts
إضافة إعدادات المتجر الافتراضية
أيضاً، دعنا نتأكد من أن مكون StoreSettings يعمل بشكل صحيح:

client/src/components/settings/StoreSettings.tsx
إصلاح مكون إعدادات المتجر
كما يجب إضافة مسار لجلب إعدادات المتجر وتحديثها في server/routes.ts إذا كان غير مكتمل:

server/routes.ts
إضافة أو تحديث مسارات إعدادات المتجر
بعد هذه التغييرات، قم بإعادة تشغيل التطبيق لتطبيق التغييرات. الآن يجب أن تظهر إعدادات المتجر بشكل صحيح في النظام.