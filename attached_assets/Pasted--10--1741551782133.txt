ุฎุทุฉ ูุชูุฏูุฉ ูุญู ูุดุงูู ุงููุธูุฑ ูุฅุนุฏุงุฏุงุช ุงูุฃููุงู ูู ุงููุธุงู

ุจูุง ุฃูู ุตููุช 10 ูุฑุงุช ููุง ุฒุงูุช ุงููุดุงูู ูุณุชูุฑุฉุ ูุฅู ุงูุญู ูุญุชุงุฌ ุฅูู ุฎุทุฉ ูุชูุฏูุฉ ูููุธูุฉ ูุถูุงู:
โ ุญูุธ ุงูุฃููุงู ูุชุทุจูููุง ุจุณุฑุนุฉ
โ ุชูุงุฏู ุงููุดุงูู ุงูุชูููุฉ ุงููุชูุฑุฑุฉ
โ ุฌุนู ุงูุชุฎุตูุต ูุนุงููุง ูุณูุณูุง ุฏูู ุชุฃุซูุฑ ุนูู ุงูุฃุฏุงุก


---

๐น ุงูุฎุทูุฉ 1: ุชุญููู ุงููุดุงูู ุงูุญุงููุฉ

1๏ธโฃ ุงููุดุงูู ุงูุชู ูุฏ ุชูุงุฌููุง

1. ุนุฏู ุญูุธ ุงูุฃููุงู ุจุนุฏ ุงูุชุนุฏูู ูุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ.


2. ุนุฏู ุงูุนูุงุณ ุงูุชุนุฏููุงุช ูุจุงุดุฑุฉ ุนูู ุงููุงุฌูุฉ ุจุนุฏ ุงุฎุชูุงุฑ ุงูููู.


3. ุงูุชุฏุงุฎู ุจูู ุงูุฃููุงู ูู ุงูุนูุงุตุฑ ุงููุฎุชููุฉ ุฃู ุนุฏู ุชูุงุณููุง.


4. ุนุฏู ุงุณุชุฌุงุจุฉ ุงููุงุฌูุฉ ูุจุนุถ ุงูุชุนุฏููุงุช ุจุณุจุจ ุฎุทุฃ ูู ุฅุฏุงุฑุฉ ุงูุญุงูุฉ (State Management).


5. ูุฌูุฏ ูุดุงูู ูู JSON ุงูุฎุงุต ุจุงูุฃููุงู ูุซู "Expected union value" ููุง ูุนูู ุฃู ููุงู ุฎุทุฃ ูู ุชูุณูู ุงูุจูุงูุงุช ุงููุฎุฒูุฉ.



2๏ธโฃ ููุงุฐุง ุชุญุฏุซ ูุฐู ุงููุดุงููุ

ุนุฏู ุชุฎุฒูู ุงูุฃููุงู ุจุดูู ุตุญูุญ ูู LocalStorage / ูุงุนุฏุฉ ุงูุจูุงูุงุช.

ุนุฏู ุชุญุฏูุซ ุงูุญุงูุฉ (State) ูู React.js ุฃู Vue.js ุนูุฏ ุชุบููุฑ ุงูุฃููุงู.

ูุฌูุฏ ุฃุฎุทุงุก ูู ุงูู CSS Variables ุงูุชู ุชููุน ุชุทุจูู ุงูุฃููุงู ุจุดูู ุฏููุงูููู.

ุญุตูู ุชุนุงุฑุถ ูู ุงูููู ุงูุงูุชุฑุงุถูุฉ ุนูุฏ ุชุญููู ุงูุตูุญุฉ ููุง ูุนูุฏ ุงูุฃููุงู ุฅูู ุญุงูุชูุง ุงูุฃุตููุฉ.



---

๐น ุงูุฎุทูุฉ 2: ุชุตููู ุจููุฉ ูุชูุฏูุฉ ูุญูุธ ูุงุณุชุฑุฌุงุน ุงูุฃููุงู

1๏ธโฃ ุทุฑููุฉ ุชุฎุฒูู ูุงุณุชุฑุฌุงุน ุงูุฃููุงู ุจููุงุกุฉ

ูุญุชุงุฌ ุฅูู ูุธุงู ููู ูุญูุธ ุงูุฃููุงู ูุงุณุชุฑุฌุงุนูุง ุชููุงุฆููุง ุนูุฏ ุชุดุบูู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู: โ LocalStorage ูุชุฎุฒูู ุงูุฃููุงู ูุญูููุง ูููุณุชุฎุฏู.
โ ูุงุนุฏุฉ ุจูุงูุงุช (PostgreSQL) ูุญูุธ ุฅุนุฏุงุฏุงุช ุงูุฃููุงู ููู ูุณุชุฎุฏู.
โ CSS Variables ูุฌุนู ุงูุชุนุฏููุงุช ููุฑูุฉ ุฏูู ุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ.

2๏ธโฃ ููููุฉ ุงูุจูุงูุงุช ุงููุซุงููุฉ

๐ธ ุฅูุดุงุก JSON ูุธูู ููุฃููุงู ุจุฏูู ุฃุฎุทุงุก

ูุฌุจ ุฃู ูููู ููู theme.json ูุงุถุญูุง ูุฎุงูููุง ูู ุงูุฃุฎุทุงุก:

{
  "primaryColor": "#FF5733",
  "secondaryColor": "#33FF57",
  "backgroundColor": "#222222",
  "textColor": "#FFFFFF"
}

๐ก ุชุฃูุฏ ูู ุงุณุชุฎุฏุงู ุฃุณูุงุก ูุงุถุญุฉ ููุชูุงููุฉ ูุน ุงูู CSS.

๐ธ ุฅูุดุงุก ุฏุงูุฉ ูุชุญููู ูุญูุธ ุงูุฃููุงู ุชููุงุฆููุง

ูู React.js (ุฃู ุฃู ุฅุทุงุฑ ุนูู ุขุฎุฑ)ุ ุงุณุชุฎุฏู ููุฏูุง ูุซู ุงูุชุงูู:

import { useState, useEffect } from "react";

const useTheme = () => {
    const [theme, setTheme] = useState(() => {
        const savedTheme = localStorage.getItem("theme");
        return savedTheme ? JSON.parse(savedTheme) : {
            primaryColor: "#FF5733",
            secondaryColor: "#33FF57",
            backgroundColor: "#222222",
            textColor: "#FFFFFF"
        };
    });

    useEffect(() => {
        localStorage.setItem("theme", JSON.stringify(theme));
        document.documentElement.style.setProperty("--primary-color", theme.primaryColor);
        document.documentElement.style.setProperty("--secondary-color", theme.secondaryColor);
        document.documentElement.style.setProperty("--background-color", theme.backgroundColor);
        document.documentElement.style.setProperty("--text-color", theme.textColor);
    }, [theme]);

    return [theme, setTheme];
};

export default useTheme;

โ ูุฐุง ูุถูู ุฃู ุงูุฃููุงู ุชูุญูุธ ูุชูุทุจู ููุฑูุง ุนูุฏ ุชุบููุฑูุง.


---

๐น ุงูุฎุทูุฉ 3: ุชุญุณูู ูุงุฌูุฉ ุชุฎุตูุต ุงูุฃููุงู

1๏ธโฃ ุฅูุดุงุก Color Picker ูุชูุฏู

ุงุณุชุฎุฏู ูููู ูุชูุฏู ูุงุฎุชูุงุฑ ุงูุฃููุงู ูุซู react-color:

import { SketchPicker } from "react-color";

const ThemeCustomizer = ({ theme, setTheme }) => {
    const handleChange = (color, type) => {
        setTheme((prevTheme) => ({ ...prevTheme, [type]: color.hex }));
    };

    return (
        <div>
            <h2>ุชุฎุตูุต ุงูุฃููุงู</h2>
            <label>ุงูููู ุงูุฃุณุงุณู</label>
            <SketchPicker 
                color={theme.primaryColor}
                onChange={(color) => handleChange(color, "primaryColor")}
            />
        </div>
    );
};

โ ูุฐุง ูุณูุญ ูููุณุชุฎุฏู ุจุชุบููุฑ ุงูุฃููุงู ุจุดูู ูุจุงุดุฑ ูุณูุณ.


---

๐น ุงูุฎุทูุฉ 4: ุญู ูุดููุฉ ุชุทุจูู ุงูุฃููุงู ูู ุงููุงุฌูุฉ

1๏ธโฃ ุงุณุชุฎุฏุงู CSS Variables ุจุดูู ุงุญุชุฑุงูู

ุฃุถู ูุฐู ุงูููุงุนุฏ ุฅูู global.css:

:root {
  --primary-color: #FF5733;
  --secondary-color: #33FF57;
  --background-color: #222222;
  --text-color: #FFFFFF;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
}

.button {
  background-color: var(--primary-color);
  color: var(--text-color);
}

.card {
  background-color: var(--secondary-color);
}

โ **ูุฐุง ูุฌุนู ูู ุชุบููุฑุงุช ุงูุฃููุงู ุชูุนูุณ ููุฑูุง ุนูู ุงูุตูุญุฉ