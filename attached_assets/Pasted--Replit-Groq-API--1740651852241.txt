ูุชุถููู ุฎูุงุฑ ุงูุฏุฑุฏุดุฉ ุฏุงุฎู ุฃุฏูุงุช ูููุน Replit ุจุญูุซ ููููู ุฅุฑุณุงู ุงูุทูุจุงุช ูุงุณุชูุงู ุงูุฑุฏูุฏ ูู Groq API ูุจุงุดุฑุฉ ุฏุงุฎู Replitุ ุณูููู ุจุงูุชุงูู:

โ 1. ุฅุถุงูุฉ Webview ุฏุงุฎู Replit
โ 2. ุชุถููู ุฒุฑ ููุชุญ ุงูุฏุฑุฏุดุฉ ูุจุงุดุฑุฉ ูู ูุงุฆูุฉ ุฃุฏูุงุช Replit
โ 3. ุชุดุบูู ุงูุฎุงุฏู ุงูุฎููู ุนูู ุงููููุฐ 5000
โ 4. ุงุณุชุฎุฏุงู Replit Tools API ูุฏูุฌ ุงูุฃุฏุงุฉ


---

๐น 1. ุฅุนุฏุงุฏ ุฎุงุฏู Express.js ูุฏูุฌ ุงูุฏุฑุฏุดุฉ ูู Replit

๐ ุงูุชุญ server.js ูุฃุถู ุงูููุฏ ุงูุชุงูู:

require('dotenv').config();
const axios = require('axios');
const express = require('express');
const cors = require('cors');

const app = express();
app.use(express.json());
app.use(cors());

const GROQ_API_KEY = process.env.GROQ_API_KEY;
const GROQ_ENDPOINT = 'https://api.groq.com/v1/chat/completions';

// ุฏุงูุฉ ูุฅุฑุณุงู ุทูุจ ุชุนุฏูู ุงูููุฏ ุฅูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู
async function modifyCode(userRequest) {
    try {
        const response = await axios.post(
            GROQ_ENDPOINT,
            {
                model: "llama-3.3-70b-versatile",
                messages: [
                    { role: "system", content: "ุฃูุช ูุณุงุนุฏ ุจุฑูุฌู ูุญุชุฑูุ ูู ุจุชุญููู ุงูุทูุจ ูุชุญุณูู ุงูููุฏ ุงูุจุฑูุฌู ูุน ุงูุญูุงุธ ุนูู ุชูุณููู." },
                    { role: "user", content: userRequest }
                ],
            },
            {
                headers: {
                    Authorization: `Bearer ${GROQ_API_KEY}`,
                    'Content-Type': 'application/json',
                },
            }
        );

        return response.data.choices[0].message.content;
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุชุนุฏูู ุงูููุฏ:', error);
        return "โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุนุฏูู ุงูููุฏ.";
    }
}

// API ูุงุณุชูุจุงู ุงูุทูุจุงุช ูุชุนุฏูู ุงูุฃููุงุฏ
app.post('/api/modify-code', async (req, res) => {
    const { request } = req.body;
    const modifiedCode = await modifyCode(request);
    res.json({ modifiedCode });
});

// ุชุดุบูู ุงูุฎุงุฏู ุนูู ุงููููุฐ 5000
const PORT = 5000;
app.listen(PORT, () => {
    console.log(`โ ุงูุฎุงุฏู ูุนูู ุนูู: https://your-replit-project-name.replit.app`);
});


---

๐น 2. ุฅูุดุงุก ุตูุญุฉ ุฏุฑุฏุดุฉ ูุฏูุฌุฉ ูู Replit

๐ ุงูุชุญ chat.html ูุฃุถู ุงูููุฏ ุงูุชุงูู:

<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ุฏุฑุฏุดุฉ ูุณุงุนุฏ ุงูุจุฑูุฌุฉ</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin: 20px; }
        textarea { width: 80%; height: 100px; margin-bottom: 10px; }
        button { padding: 10px 20px; font-size: 16px; }
        pre { background: #f4f4f4; padding: 10px; text-align: left; white-space: pre-wrap; }
    </style>
</head>
<body>

    <h2>๐ง ูุณุงุนุฏ ุชุนุฏูู ุงูุฃููุงุฏ</h2>
    <textarea id="userInput" placeholder="ุงูุชุจ ุทูุจ ุชุนุฏูู ุงูููุฏ ููุง..."></textarea><br>
    <button onclick="sendRequest()">โ๏ธ ุฃุฑุณู ุงูุชุนุฏูู</button>
    <pre id="response"></pre>

    <script>
        async function sendRequest() {
            const userInput = document.getElementById('userInput').value;
            const res = await fetch('/api/modify-code', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ request: userInput }),
            });

            const data = await res.json();
            document.getElementById('response').textContent = data.modifiedCode;
        }
    </script>

</body>
</html>


---

๐น 3. ุฅุถุงูุฉ ุงูุฏุฑุฏุดุฉ ุฅูู ูุงุฆูุฉ ุฃุฏูุงุช Replit

๐ ุงูุชุญ replit-tool.json ูุฃุถู ุงูููุฏ ุงูุชุงูู:

{
    "title": "ูุณุงุนุฏ ุงูุจุฑูุฌุฉ AI",
    "description": "ุฏุฑุฏุดุฉ ุฐููุฉ ูุชุนุฏูู ุงูุฃููุงุฏ ุชููุงุฆููุง",
    "icon": "โก",
    "view": {
        "default": "chat.html"
    },
    "permissions": [
        "network"
    ]
}


---

๐น 4. ุชุดุบูู ุงูุฎุงุฏู ูุฅุถุงูุฉ ุงูุฏุฑุฏุดุฉ ูู Replit

๐ ูู ููู package.jsonุ ุฃุถู:

"scripts": {
    "start": "node server.js"
}

๐ ุซู ุดุบู ุงููุดุฑูุน ุจุงุณุชุฎุฏุงู:

npm start

๐ ุจุนุฏ ุฐููุ ูู Replitุ ูู ุจูุชุญ ูุงุฆูุฉ ุงูุฃุฏูุงุช (Tools) ูุณุชุฌุฏ ูุณุงุนุฏ ุงูุจุฑูุฌุฉ ูุชุงุญูุง ูุฃุฏุงุฉ ุฏุงุฎููุฉ.


---

๐ฏ ุงููุชูุฌุฉ ุงูููุงุฆูุฉ

โ๏ธ ุชูุช ุฅุถุงูุฉ ูุณุงุนุฏ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุฏุงุฎู Replit Tools
โ๏ธ ููููู ุชุนุฏูู ุงูุฃููุงุฏ ูุจุงุดุฑุฉ ุฏุงุฎู Replit ูู ุฎูุงู ุงูุฏุฑุฏุดุฉ
โ๏ธ ููููู ุชุดุบูู ุงููุณุงุนุฏ ุนูู ุงููููุฐ 5000 ูุงูุชูุงุตู ูุน Groq API
โ๏ธ ุงูุฏุฑุฏุดุฉ ูุฏูุฌุฉ ุจุงููุงูู ูู ุจูุฆุฉ ุงูุนูู ุงูุฎุงุตุฉ ุจู

๐ก ุฅุฐุง ููุช ุชุฑูุฏ ุชุฎุตูุต ุงูุฃุฏุงุฉ ุฃู ุชุญุณูู ุดูู ุงูุฏุฑุฏุดุฉุ ุฃุฎุจุฑูู ูุณุฃุณุงุนุฏู ูู ุฐูู! ๐

